// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Student {
  // Attributes
  id            String     @id @default(cuid())
  fullName      String
  imageUrl      String?
  gender        Boolean?
  nim           String     @unique
  yearOfCollege DateTime?
  email         String     @unique
  password      String
  role          Role       @default(student)
  birthDate     DateTime?
  faculty       String?
  department    String?
  phoneNumber   String?
  createdAt     DateTime?  @default(now())
  // Relations
  history       History[]
  campaigns     Campaign[]
}

model History {
  // Attributes
  id           String    @id @default(cuid())
  status       Json?
  registerDate DateTime?
  createdAt    DateTime? @default(now())
  // Relations
  Student      Student?  @relation(fields: [studentId], references: [id])
  studentId    String?
  Campaign     Campaign? @relation(fields: [campaignId], references: [id])
  campaignId   String?
}

model Campaign {
  // Attributes
  id                 String        @id @default(cuid())
  title              String?
  status             Boolean?
  imageUrl           String?
  positions          Json?
  description        String?
  timeline           Json?
  generalRequirement String?
  dateClosed         DateTime?
  createdAt          DateTime?     @default(now())
  // Relations
  applicantHistory   History[]
  registerForm       Form?
  applicantManager   Applicant?
  Organization       Organization? @relation(fields: [organizationId], references: [id])
  organizationId     String?
  students           Student[]
}

model Form {
  // Attributes
  id          String    @id @default(cuid())
  title       String?
  description String?
  fields      Json?
  formUrl     String?   @unique
  createdAt   DateTime? @default(now())
  // Relations
  Campaign    Campaign? @relation(fields: [campaignId], references: [id])
  campaignId  String?
}

model Applicant {
  // Attributes
  id         String    @id @default(cuid())
  // Relations
  Campaign   Campaign? @relation(fields: [campaignId], references: [id])
  campaignId String?
}

model Organization {
  // Attributes
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  password      String?
  role          Role       @default(organization)
  period        String?
  startPeriod   DateTime?
  endPeriod     DateTime?
  cabinet       String?
  faculty       String?
  department    String?
  bio           String?
  contactPerson String?
  // Relations
  campaigns     Campaign[]
}

enum Role {
  student
  organization
}
